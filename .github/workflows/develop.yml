name: develop

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

jobs:

  setup:

    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v4

    - name: Setup system
      run: sudo ./setup.sh --local

  build:

    runs-on: ubuntu-latest
    needs: [setup]

    steps:

    - uses: actions/checkout@v4

    - name: Build gridlabd
      run: sudo ./build.sh --system --parallel

  openfido:

    runs-on: ubuntu-latest
    needs: [setup]

    steps:

    - uses: actions/checkout@v4

    - name: Install openfido
      run: |
        test -x /usr/local/bin/python3 || sudo ln -sf $(which python3) /usr/local/bin/python3
        sudo /usr/local/bin/python3 -m venv /usr/local/opt/openfido
        source /usr/local/opt/openfido/bin/activate
        sudo /usr/local/bin/python3 -m pip install requests pandas docker
        export OPENFIDO_PIP_OPTIONS=--user
        curl -sL https://raw.githubusercontent.com/openfido/cli/main/install.sh | sudo sh
        
  validate:

    runs-on: ubuntu-latest
    needs: [build, openfido]

    steps:

    - uses: actions/checkout@v4

    - name: Validate system
      run: sudo gridlabd -D keep_progress=TRUE -T 0 --validate -D github_actions=yes || ( sudo utilities/save_validation_errors ; false )

  artifacts:

    runs-on: ubuntu-latest
    needs: [validate]

    steps:

    - uses: actions/checkout@v4

    - name: Upload artifacts on failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: validate-result
        path: |
          validate.txt
          validate.tar.gz
