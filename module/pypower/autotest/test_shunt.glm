#option verbose
//#option debug

module pypower
{
    message_flags VERBOSE|DEBUG;    
    stop_on_failure FALSE;
    default_reactive_power_fraction 0.1;
    enable_opf TRUE;
}
module assert;

//
// Bus objects
//
#for BUS in 1 2 3 4
object bus
{
    name "bus_${BUS}";
    bus_i ${BUS};
    type PQ;
    Vm 1.0;
    Va 0.0;
    Gs 1.0 MVA;
    Bs 10 MVAr;
    baseKV 35.0 kV;    
}
#done
modify bus_1.type REF;
modify bus_4.type PV;

//
// Generation objects
//
object gen
{
    name "gen_4";
    parent "bus_4";
    bus 4;
    Pg 40 MW;
    Qg 40 MVAr;
    Pmin 10;
    Pmax 500;
    Qmin -100;
    Qmax 100;
    status IN_SERVICE;
}
object gencost
{
    parent "gen_4";
    startup 10;
    shutdown 0;
    model POLYNOMIAL;
    costs 10,1,0.01;
}

//
// Load objects
//
#for BUS in 1 2 3
object load
{
    name "load_${BUS}";
    parent "bus_${BUS}";
    Z 1 Ohm;
    I 10 A;
    P 10 MVA;
    Vn 35 kV;
    status ONLINE;
}
object shunt 
{ 
    name "caps_${BUS}";
    parent "bus_${BUS}";
    control_mode DISCRETE_V;
    status ONLINE;
    voltage_high 1.2 pu;
    voltage_low 0.8 pu;
    admittance 10.0 MVAr;
    steps_1 5;
    admittance_1 10.0 MVAr;
}
#done

//
// Branch objects
#for BUS in 2 3
object branch 
{
    name "branch_1_${BUS}";
    from "bus_1";
    to "bus_${BUS}";
    fbus 1;
    tbus ${BUS};
    r 1.5e-3;
    x 3.0e-2;
    b 3.0;
    rateA 200 MVA;
    rateB 220 MVA;
    rateC 250 MVA;
    status IN;
}
object branch 
{
    name "branch_${BUS}_4";
    from "bus_${BUS}";
    to "bus_4";
    fbus ${BUS};
    tbus 4;
    r 1.5e-3;
    x 3.0e-2;
    b 3.0;
    rateA 200 MVA;
    rateB 220 MVA;
    rateC 250 MVA;
    status IN;
}
#done
object branch
{
    name "branch_2_3";
    from "bus_2";
    to "bus_3";
    fbus 2;
    tbus 3;
    r 3e-3;
    x 6.0e-2;
    b 6.0;
    rateA 200 MVA;
    rateB 220 MVA;
    rateC 250 MVA;
    status IN;    
}

#set savefile="test_shunt.json"
