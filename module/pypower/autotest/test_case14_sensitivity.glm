#define CASE=14
#ifexists "../case.glm"
#define DIR=..
#endif
#include "${DIR:-.}/case.glm"

module pypower
{
	solver_method NR;
}

modify pp_bus_1.weather_file ${DIR:-.}/test_case14_sensitivity.csv;
modify pp_bus_1.weather_variables Sh,Sn,Sg,Wd,Ws,Td,Tw,RH,PW;
modify pp_bus_1.weather_sensitivity "S.real:Td<10,-0.1;S.real:Td<50,-0.1;S.imag:Td>80,+0.1;S.real:Sh,-0.01";

module tape
{
	csv_header_type NAME;
}

object recorder
{
	parent pp_bus_1;
	property S,Sh,Sn,Sg,Wd,Ws,Td,Tw,RH,PW;
	file "test_case14_sensitivity_pp_bus_1_record.csv";
	interval 3600;
}

#set suppress_repeat_messages=FALSE

clock
{
	timezone "PST+8PDT";
	starttime "2020-08-01 00:00:00 PST";
	stoptime "2020-09-01 00:00:00 PST";
}

#ifexists ../case.glm
#on_exit 0 diff ../test_case14_sensitivity_pp_bus_1_record.csv test_case14_sensitivity_pp_bus_1_record.csv > gridlabd.diff
#endif

module assert;
#define MRES=0.05 // magnitude test resolution
#define ARES=0.2 // angle test resolution

object assert
{      
    parent pp_bus_1;
    target Vm;
    relation ==;
    value 1.060;
    within ${MRES};
}
object assert
{
    parent pp_bus_1;
    target Va;
    relation ==;
    value 0.00;
    within ${ARES};
}

object assert
{      
    parent pp_bus_2;
    target Vm;
    relation ==;
    value 1.045;
    within ${MRES};
}
object assert
{
    parent pp_bus_2;
    target Va;
    relation ==;
    value -4.98;
    within ${ARES};
}

object assert
{      
    parent pp_bus_3;
    target Vm;
    relation ==;
    value 1.010;
    within ${MRES};
}
object assert
{
    parent pp_bus_3;
    target Va;
    relation ==;
    value -12.72;
    within ${ARES};
}

object assert
{      
    parent pp_bus_4;
    target Vm;
    relation ==;
    value 1.019;
    within ${MRES};
}
object assert
{
    parent pp_bus_4;
    target Va;
    relation ==;
    value -10.33;
    within ${ARES};
}

object assert
{      
    parent pp_bus_5;
    target Vm;
    relation ==;
    value 1.020;
    within ${MRES};
}
object assert
{
    parent pp_bus_5;
    target Va;
    relation ==;
    value -8.78;
    within ${ARES};
}

object assert
{      
    parent pp_bus_6;
    target Vm;
    relation ==;
    value 1.070;
    within ${MRES};
}
object assert
{
    parent pp_bus_6;
    target Va;
    relation ==;
    value -14.22;
    within ${ARES};
}

object assert
{      
    parent pp_bus_7;
    target Vm;
    relation ==;
    value 1.062;
    within ${MRES};
}
object assert
{
    parent pp_bus_7;
    target Va;
    relation ==;
    value -13.37;
    within ${ARES};
}

object assert
{      
    parent pp_bus_8;
    target Vm;
    relation ==;
    value 1.090;
    within ${MRES};
}
object assert
{
    parent pp_bus_8;
    target Va;
    relation ==;
    value -13.36;
    within ${ARES};
}

object assert
{      
    parent pp_bus_9;
    target Vm;
    relation ==;
    value 1.056;
    within ${MRES};
}
object assert
{
    parent pp_bus_9;
    target Va;
    relation ==;
    value -14.94;
    within ${ARES};
}

object assert
{      
    parent pp_bus_10;
    target Vm;
    relation ==;
    value 1.051;
    within ${MRES};
}
object assert
{
    parent pp_bus_10;
    target Va;
    relation ==;
    value -15.10;
    within ${ARES};
}

object assert
{      
    parent pp_bus_11;
    target Vm;
    relation ==;
    value 1.057;
    within ${MRES};
}
object assert
{
    parent pp_bus_11;
    target Va;
    relation ==;
    value -14.79;
    within ${ARES};
}

object assert
{      
    parent pp_bus_12;
    target Vm;
    relation ==;
    value 1.055;
    within ${MRES};
}
object assert
{
    parent pp_bus_12;
    target Va;
    relation ==;
    value -15.07;
    within ${ARES};
}

object assert
{      
    parent pp_bus_13;
    target Vm;
    relation ==;
    value 1.050;
    within ${MRES};
}
object assert
{
    parent pp_bus_13;
    target Va;
    relation ==;
    value -15.16;
    within ${ARES};
}

object assert
{      
    parent pp_bus_14;
    target Vm;
    relation ==;
    value 1.036;
    within ${MRES};
}
object assert
{
    parent pp_bus_14;
    target Va;
    relation ==;
    value -16.04;
    within ${ARES};
}

