#define CASE=14
#ifexists "../case.glm"
#define DIR=..
#endif
#include "${DIR:-.}/case.glm"

module pypower
{
	maximum_timestep 3600;
}

object powerline
{
	parent pp_branch_1;
	impedance 0.01938+0.05917j mOhm/mile;
    susceptance 0.0528 mS/mile;
	length 1000 mile;
}

object powerline 
{
	parent pp_branch_2;
	composition SERIES;
	object powerline 
	{
	    impedance 0.05403+0.22304j mOhm/mile;
	    susceptance 0.0492 mS/mile;
	    length 500 mile;
	};
	object powerline 
	{
	    impedance 0.05403+0.22304j mOhm/mile;
	    susceptance 0.0492 mS/mile;
	    length 500 mile;
	};
}

object powerline 
{
	parent pp_branch_3;
	composition PARALLEL;
	object powerline 
	{
	    impedance 0.04699+0.19797j mOhm/mile;
	    susceptance 0.0438 mS/mile;
	    length 2000 mile;
	};
	object powerline 
	{
	    impedance 0.04699+0.19797j mOhm/mile;
	    susceptance 0.0438 mS/mile;
	    length 2000 mile;
	};
}

module assert;
#define MRES=0.05 // magnitude test resolution
#define ARES=0.2 // angle test resolution

object assert
{      
    parent pp_bus_1;
    target Vm;
    relation ==;
    value 1.060;
    within ${MRES};
}
object assert
{
    parent pp_bus_1;
    target Va;
    relation ==;
    value 0.00;
    within ${ARES};
}

object assert
{      
    parent pp_bus_2;
    target Vm;
    relation ==;
    value 1.045;
    within ${MRES};
}
object assert
{
    parent pp_bus_2;
    target Va;
    relation ==;
    value -4.98;
    within ${ARES};
}

object assert
{      
    parent pp_bus_3;
    target Vm;
    relation ==;
    value 1.010;
    within ${MRES};
}
object assert
{
    parent pp_bus_3;
    target Va;
    relation ==;
    value -12.72;
    within ${ARES};
}

object assert
{      
    parent pp_bus_4;
    target Vm;
    relation ==;
    value 1.019;
    within ${MRES};
}
object assert
{
    parent pp_bus_4;
    target Va;
    relation ==;
    value -10.33;
    within ${ARES};
}

object assert
{      
    parent pp_bus_5;
    target Vm;
    relation ==;
    value 1.020;
    within ${MRES};
}
object assert
{
    parent pp_bus_5;
    target Va;
    relation ==;
    value -8.78;
    within ${ARES};
}

object assert
{      
    parent pp_bus_6;
    target Vm;
    relation ==;
    value 1.070;
    within ${MRES};
}
object assert
{
    parent pp_bus_6;
    target Va;
    relation ==;
    value -14.22;
    within ${ARES};
}

object assert
{      
    parent pp_bus_7;
    target Vm;
    relation ==;
    value 1.062;
    within ${MRES};
}
object assert
{
    parent pp_bus_7;
    target Va;
    relation ==;
    value -13.37;
    within ${ARES};
}

object assert
{      
    parent pp_bus_8;
    target Vm;
    relation ==;
    value 1.090;
    within ${MRES};
}
object assert
{
    parent pp_bus_8;
    target Va;
    relation ==;
    value -13.36;
    within ${ARES};
}

object assert
{      
    parent pp_bus_9;
    target Vm;
    relation ==;
    value 1.056;
    within ${MRES};
}
object assert
{
    parent pp_bus_9;
    target Va;
    relation ==;
    value -14.94;
    within ${ARES};
}

object assert
{      
    parent pp_bus_10;
    target Vm;
    relation ==;
    value 1.051;
    within ${MRES};
}
object assert
{
    parent pp_bus_10;
    target Va;
    relation ==;
    value -15.10;
    within ${ARES};
}

object assert
{      
    parent pp_bus_11;
    target Vm;
    relation ==;
    value 1.057;
    within ${MRES};
}
object assert
{
    parent pp_bus_11;
    target Va;
    relation ==;
    value -14.79;
    within ${ARES};
}

object assert
{      
    parent pp_bus_12;
    target Vm;
    relation ==;
    value 1.055;
    within ${MRES};
}
object assert
{
    parent pp_bus_12;
    target Va;
    relation ==;
    value -15.07;
    within ${ARES};
}

object assert
{      
    parent pp_bus_13;
    target Vm;
    relation ==;
    value 1.050;
    within ${MRES};
}
object assert
{
    parent pp_bus_13;
    target Va;
    relation ==;
    value -15.16;
    within ${ARES};
}

object assert
{      
    parent pp_bus_14;
    target Vm;
    relation ==;
    value 1.036;
    within ${MRES};
}
object assert
{
    parent pp_bus_14;
    target Va;
    relation ==;
    value -16.04;
    within ${ARES};
}

